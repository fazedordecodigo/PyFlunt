[project]
name = "Flunt"
version = "2.3.0"
description = "Python implementation of Domain Notification Pattern inspired by Flunt (.NET)"
authors = ["Emerson Delatorre <38289677+Delatorrea@users.noreply.github.com>"]
repository = "https://github.com/Delatorrea/PyFlunt"
homepage = "https://github.com/Delatorrea/PyFlunt"
documentation = "https://github.com/Delatorrea/PyFlunt"
license = "MIT"
keywords = [
  "notifications",
  "python",
  "ddd",
  "python3",
  "validations",
  "notification",
  "ddd-patterns",
  "ddd-architecture",
  "validation-library",
  "class-validator",
  "fluentvalidation",
  "class-validation",
  "flunt",
  "domain-notification",
  "class-validator-cpf"
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Office/Business",
  "Topic :: Utilities",
  "Topic :: Software Development",
  "Topic :: Software Development :: Internationalization",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Natural Language :: English",
  "Natural Language :: Portuguese",
  "Natural Language :: Portuguese (Brazilian)"
]
readme = "./docs/README.md"
requires-python = ">=3.9 <4.0"

dependencies = [
  "typing-extensions = ^4.9.0",
  "deprecated = ^1.2.14"
]

[tool.uv]
dev-dependencies = [
  "faker >=23.1.0",
  "pytest >=8.0.1",
  "pytest-cov >=4.1,<6.0",
  "ruff >=0.2.1,<0.8.0",
  "pre-commit >=3.6.1",
  "pre-commit-hooks >=4.5.0",
  "mypy >=1.8.0",
  "tox =*"
]

[project.scripts]
sample = "samples.flunt_sample:main"

[tool.pytest.ini_options]
pythonpath = [
  "flunt"
]
python_files = "test*.py"
python_classes = "Test"
python_functions = "test"
addopts = "--tb=native"
console_output_style = "classic"
junit_duration_report = "call"
filterwarnings = "ignore::RuntimeWarning"

[tool.ruff]
line-length = 79
indent-width = 4
target-version = "py39"
fix = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
unfixable = []
select = [
  "F",              # pyflakes
  "E", "W", "D",    # pycodestyle
  "I",              # isort
  "N",              # flake8-naming
  "UP",             # pyupgrade
  "YTT",            # flake8 2020
  "ASYNC",          # flake8-async
  "B",              # flake8-bugbear
  "C4",             # flake8-comprehensions
  "DTZ",            # flake8-datatimez
  "T10",            # flake8-debugger
  "LOG",            # flake8-logging
  "G",              # flake8-logging-format
  "PIE",            # flake8-pie
  "T20",            # flake8-print
  "PYI",            # flake8-pyi
  "PT",             # flake8-pytest-style
  "Q",              # flake8-quotes
  "RSE",            # flake8-raise
  "RET",            # flake8-return
  "SLF",            # flake8-self
  "SLOT",           # flake8-slots
  "TID",            # flake8-tidy-imports
  "TCH",            # flake8-type-checking
  "INT",            # flake8-gettext
  "ARG",            # flake8-unused-arguments
  "PTH",            # flake8-use-pathlib
  "TD",             # flake8-todos
  "PL",             # pylint
]
ignore = [
  "D100",
  "D103",
  "D104",
  "D203",
  "D206",
  "D212",
  "D417",
  "E501",
  "G004",
  "TD004",
  "TD003",
  "W191",
  "PLE1205"
]

[tool.mypy]
ignore_missing_imports = true
